services:
  db:
    image: postgres:16
    container_name: ua_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${PG_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate:4
    container_name: ua_migrate
    depends_on:
      db:
        condition: service_healthy
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations:/migrations:ro
    restart: "on-failure"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ua_app
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      PORT: "8080"
    ports:
      - "${APP_PORT}:8080"
    restart: unless-stopped

volumes:
  pgdata:
